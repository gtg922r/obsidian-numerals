import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import path from 'path';

// Get the project root directory (parent of scripts folder)
const projectRoot = path.resolve(process.cwd());

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const buildOptions = {
	banner: {
		js: banner,
	},
	entryPoints: [path.join(projectRoot, 'src/main.ts')],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	minify: prod,
	outfile: path.join(projectRoot, 'main.js'),
};

if (prod) {
	// Production build
	esbuild.build(buildOptions).catch(() => process.exit(1));
} else {
	// Development build with watch
	const context = await esbuild.context(buildOptions);
	await context.watch();
	console.log('Watching for changes...');
}
